postgresql_version: 9.6
postgresql_encoding: "UTF-8"
postgresql_data_checksums: false
postgresql_admin_user: "postgres"
postgresql_default_auth_method: "trust"
postgresql_host_auth_method: "password"

postgresql_service_user: "{{ postgresql_admin_user }}"
postgresql_service_group: "{{ postgresql_admin_user }}"
postgresql_service_enabled: true

postgresql_database_owner: "{{ postgresql_admin_user }}"
postgresql_cluster_name: "main"
postgresql_cluster_reset: false

# Directory where log files are written, can be absolute or relative to PGDATA
postgresql_log_directory:              "pg_log"
# Log file name pattern, can include strftime() escapes
postgresql_log_filename:               "postgresql-%Y-%m-%d_%H%M%S.log"
postgresql_log_file_mode:              "0600" # begin with 0 to use octal notation

postgresql_locale_parts:
  - "en_US" # Locale
  - "UTF-8" # Encoding
postgresql_locale: "{{ postgresql_locale_parts | join('.') }}"
postgresql_ctype_parts:
  - "en_US" # Locale
  - "UTF-8" # Encoding
postgresql_ctype: "{{ postgresql_ctype_parts | join('.') }}"



# pg_hba.conf
postgresql_pg_hba_default:
  - { type: local, database: all, user: "{{ postgresql_admin_user }}", address: "", method: "{{ postgresql_default_auth_method }}", comment: "" }
  - { type: local, database: all, user: all, address: "",             method: "{{ postgresql_default_auth_method }}", comment: '"local" is for Unix domain socket connections only' }
  - { type: host,  database: all, user: all, address: "127.0.0.1/32", method: "{{ postgresql_default_auth_method }}", comment: "IPv4 local connections:" }
  - { type: host,  database: all, user: all, address: "::1/128",      method: "{{ postgresql_default_auth_method }}", comment: "IPv6 local connections:" }
  - { type: local, database: all, user: "{{ postgresql_admin_user }}", address: "", method: "peer map=root_as_{{ postgresql_admin_user }}", comment: "Local root Unix user, passwordless access" }

postgresql_pg_hba_passwd_hosts: ["10.142.0.6/32"]
postgresql_pg_hba_trust_hosts: []

# postgresql.conf

#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# Location of postgres configuration files here

#postgresql_conf_directory: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
postgresql_conf_directory: "/var/lib/{{ postgresql_varlib_directory_name }}/{{ postgresql_version }}/{{ postgresql_cluster_name }}"

# HBA (Host Based Authentication) file
postgresql_hba_file: "{{ postgresql_conf_directory }}/pg_hba.conf"
# Ident configuration file
postgresql_ident_file: "{{ postgresql_conf_directory }}/pg_ident.conf"
postgresql_varlib_directory_name: "postgresql"
postgresql_data_directory: "/var/lib/{{ postgresql_varlib_directory_name }}/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
postgresql_pid_directory: "/var/run/postgresql"

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

postgresql_listen_addresses: '*'
postgresql_port: 5432

postgresql_max_connections: 100


#------------------------------------------------------------------------------
# PGTUNE
#------------------------------------------------------------------------------
# Should we run pgtune and accept the changes it proposes?
postgresql_pgtune: no
# Total system memory in bytes, will attempt to detect if set to "no"
postgresql_pgtune_memory: no
# Database type, valid options are DW, OLTP, Web, Mixed, Desktop
postgresql_pgtune_type: "Mixed"
# Maximum number of expected connections, if "no", default based on db type
postgresql_pgtune_connections: no

# Install repo, or rely on existing configuration (Satellite, Artifactory, etc.)
postgresql_install_repository: true


postgresql_env:
  LC_ALL: "{{ postgresql_locale }}"
  LC_LCTYPE: "{{ postgresql_locale }}"

# Yum settings
postgresql_pgdg_dists:
  RedHat: redhat
postgresql_pgdg_releases:
  redhat: {
      9.6: 3
}

postgresql_version_terse: "{{ postgresql_version | replace('.', '') }}"

# YUM repository locations
postgresql_yum_repository_url: "http://yum.postgresql.org"
postgresql_pgdg_repository_url: "https://download.postgresql.org/pub/repos/yum/"

# YUM (RedHat, CentOS, etc.) baseurl/gpgkey
postgresql_yum_repository_baseurl: "{{ postgresql_yum_repository_url }}/{{ postgresql_version }}/{{ ansible_os_family | lower }}/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}"
postgresql_yum_repository_gpgkey: "{{ postgresql_pgdg_repository_url }}/RPM-GPG-KEY-PGDG-{{ postgresql_version_terse }}"

